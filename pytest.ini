[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Async support
asyncio_mode = auto

# Output and verbosity
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=app
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=term-missing
    --cov-fail-under=85
    --no-cov-on-fail

# Coverage configuration
[coverage:run]
source = app
omit = 
    */tests/*
    */venv/*
    */migrations/*
    */alembic/*
    app/__init__.py
    app/*/__init__.py
    */conftest.py

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

    # Don't complain about abstract methods
    @(abc\.)?abstractmethod

ignore_errors = True
precision = 2
show_missing = True

[coverage:html]
directory = htmlcov
title = YouTube Download Service Coverage Report

[coverage:xml]
output = coverage.xml

# Test markers (for categorizing tests)
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, real dependencies)
    slow: Tests that take a long time to run
    database: Tests that require database setup
    external: Tests that require external services (YouTube, AWS)
    asyncio: Tests that use asyncio

# Minimum versions
minversion = 6.0

# Log configuration for tests
log_auto_indent = true
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout for tests (prevent hanging)
timeout = 60

# Warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning:celery.*
    ignore::DeprecationWarning:kombu.*
    ignore::PendingDeprecationWarning

# Environment variables for tests
env =
    ENVIRONMENT = test
    DATABASE_URL = sqlite+aiosqlite:///:memory:
    REDIS_URL = redis://localhost:6379/1
    TESTING = true